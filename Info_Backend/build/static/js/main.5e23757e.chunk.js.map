{"version":3,"sources":["api/InfoConnect.js","store/infos/infoAction.js","components/newInfo.js","components/Info.js","sortingAlgorythm/sorting.js","components/search.js","store/user/userAction.js","api/loginConnect.js","components/login.js","App.js","store/user/userReducer.js","store/infos/infoReducer.js","store/combinedReducers.js","index.js"],"names":["token","config","setConfig","headers","Authorization","getAll","a","axios","get","request","data","create","newObject","post","poista","id","delete","setToken","newToken","saveInfos","info","type","NewInfo","useState","title","setTitle","category","setCategory","text","setText","link","setLink","pic","setPic","infoSet","useDispatch","postData","event","preventDefault","Connect","newData","console","log","className","Form","onSubmit","Group","Label","Control","onChange","target","value","placeholder","as","rows","Button","variant","onClick","name","Info","word","userGet","useSelector","state","userReducer","deletee","split","highlightClassName","searchWords","autoEscape","textToHighlight","src","alt","href","rel","admin","sorting","list","sort","b","toLowerCase","includes","Search","setFilter","infoReducer","setWord","Row","Col","sm","clone","newdata","column","saveUser","logOutUser","login","Login","username","setUsername","password","setPassword","userSet","handeLogin","LoginConnect","user","sessionStorage","setItem","JSON","stringify","InfoConnect","App","infoGet","useEffect","loggedUserJSON","getItem","parse","start","allData","map","key","clear","action","newUser","newState","allReducers","combineReducers","Mystore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"gUAGIA,EAAQ,KACRC,EAAS,GAMPC,EAAY,WAChBD,EAAS,CACPE,QAAS,CAAEC,cAAeJ,KAwBf,GAAEK,OAnBL,uCAAG,4BAAAC,EAAA,6DACbJ,IADa,SAESK,IAAMC,IAlBd,aAkB2BP,GAF5B,cAEPQ,EAFO,yBAGNA,EAAQC,MAHF,2CAAH,qDAmBaC,OAbb,uCAAG,WAAMC,GAAN,eAAAN,EAAA,6DACbJ,IADa,SAESK,IAAMM,KAxBd,aAwB4BD,EAAWX,GAFxC,cAEPQ,EAFO,yBAGNA,EAAQC,MAHF,2CAAH,sDAaqBI,OANrB,uCAAG,WAAOC,GAAP,eAAAT,EAAA,6DACbJ,IADa,SAESK,IAAMS,OAAN,UA/BR,aA+BQ,YAA2BD,GAAMd,GAF1C,cAEPQ,EAFO,yBAGNA,EAAQC,MAHF,2CAAH,sDAM6BO,SA9BxB,SAAAC,GACflB,EAAK,iBAAakB,K,OCPPC,EAAY,SAACC,GACtB,MAAM,CACFC,KAAK,OACLD,SCiEOE,EA7DC,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,OAEcF,mBAAS,IAFvB,mBAEXG,EAFW,KAEDC,EAFC,OAGMJ,mBAAS,IAHf,mBAGXK,EAHW,KAGLC,EAHK,OAIMN,mBAAS,IAJf,mBAIXO,EAJW,KAILC,EAJK,OAKIR,oBAAS,GALb,mBAKXS,EALW,KAKNC,EALM,KAMZC,EAAUC,cAEVC,EAAQ,uCAAG,WAAOC,GAAP,iBAAA/B,EAAA,yDACb+B,EAAMC,iBACQ,KAAVd,GAA6B,KAAbE,GAA4B,KAATE,EAF1B,wBAGLlB,EAAO,CACPc,QACAE,WACAE,OACAE,OACAE,OARK,SAUcO,EAAQ5B,OAAOD,GAV7B,8BAWa6B,EAAQlC,SAXrB,OAWHmC,EAXG,OAYTN,EAAQf,EAAUqB,IAZT,wBAcTC,QAAQC,IAAI,wBAdH,4CAAH,sDAkBd,OAEI,yBAAKC,UAAU,mBACX,kBAACC,EAAA,EAAD,CAAMC,SAAUT,GACZ,kBAACQ,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,eACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU,SAAAZ,GAAK,OAAIZ,EAASY,EAAMa,OAAOC,QAAQ9B,KAAK,OAAO+B,YAAY,6BAG3F,kBAACR,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU,SAAAZ,GAAK,OAAIV,EAAYU,EAAMa,OAAOC,QAAQ9B,KAAK,OAAO+B,YAAY,mCAG9F,kBAACR,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,4CACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU,SAAAZ,GAAK,OAAIR,EAAQQ,EAAMa,OAAOC,QAAQE,GAAG,WAAWC,KAAK,OAGrF,kBAACV,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,8DACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU,SAAAZ,GAAK,OAAIN,EAAQM,EAAMa,OAAOC,QAAQ9B,KAAK,OAAO+B,YAAY,6BAG1F,kBAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUnC,KAAK,UAA/B,UArBJ,gBAuBI,2BAAOA,KAAK,QAAQoC,QAAS,kBAAMxB,GAAO,IAAQyB,KAAK,SAASP,MAAM,SAvB1E,gBAyBI,2BAAO9B,KAAK,QAAQoC,QAAS,kBAAMxB,GAAO,IAAOyB,KAAK,SAASP,MAAM,Y,iBCnBtEQ,EAjCF,SAAC,GAAoD,IAAlDnC,EAAiD,EAAjDA,MAAOE,EAA0C,EAA1CA,SAAUE,EAAgC,EAAhCA,KAAMb,EAA0B,EAA1BA,GAAI6C,EAAsB,EAAtBA,KAAM9B,EAAgB,EAAhBA,KAAME,EAAU,EAAVA,IAE7CE,EAAUC,cACV0B,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAErCC,EAAO,uCAAG,4BAAA3D,EAAA,sEACMiC,EAAQzB,OAAOC,GADrB,8BAEUwB,EAAQlC,SAFlB,OAENmC,EAFM,OAGZN,EAAQf,EAAUqB,IAHN,2CAAH,qDAKT0B,EAAQN,EAAKM,MAAM,KAIvB,OAHAzB,QAAQC,IAAIwB,GAIR,6BACI,4BAAK1C,GACL,4BAAKE,GACL,yBAAKiB,UAAU,OACX,kBAAC,IAAD,CACIwB,mBAAmB,qBACnBC,YAAaF,EACbG,YAAY,EACZC,gBAAiB1C,MAGhB,IAARI,GAAiB,yBAAKuC,IAAKzC,EAAM0C,IAAI,UAC7B,IAARxC,GAAgB,uBAAGyC,KAAM3C,EAAMoB,OAAO,SAASwB,IAAI,uBAAuB5C,IACxD,IAAlB+B,EAAQc,OAAkB,kBAACpB,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASQ,GAAlC,Y,gCCdxBW,EAtBC,SAACC,EAAKjB,GAEd,OAAOiB,EAAKC,MAAK,SAACxE,EAAEyE,GACZ,OAAGzE,EAAEkB,MAAMwD,cAAcC,SAASrB,EAAKoB,gBACvB,EACPD,EAAEvD,MAAMwD,cAAcC,SAASrB,EAAKoB,eAC9B,EAGJ1E,EAAEsB,KAAKoD,cAAcC,SAASrB,EAAKoB,gBACtB,EACPD,EAAEnD,KAAKoD,cAAcC,SAASrB,EAAKoB,eAC7B,EAEA,MCmBxBE,EA3BA,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACPjD,EAAUC,cACVzB,EAAOoD,aAAY,SAAAC,GAAK,OAAIA,EAAMqB,eAFZ,EAGJ7D,mBAAS,IAHL,mBAGrBqC,EAHqB,KAGfyB,EAHe,KAY5B,OACI,yBAAK1C,UAAU,UACX,kBAACC,EAAA,EAAKE,MAAN,CAAYO,GAAIiC,KACZ,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAAC5C,EAAA,EAAKI,QAAN,CAAc3B,KAAK,OAAO4B,SAXtB,SAACZ,GACjBgD,EAAQhD,EAAMa,OAAOC,OACrBgC,EAAU9C,EAAMa,OAAOC,OACvB,IAAIsC,EAAK,YAAO/E,GACZgF,EAAUd,EAAQa,EAAO7B,GAC7B1B,EAAQf,EAAUuE,KAM2CtC,YAAY,YAGjE,kBAACR,EAAA,EAAKG,MAAN,CAAY4C,QAAM,EAACH,GAAG,SC1BhCI,EAAW,SAACxE,GACd,MAAM,CACFC,KAAK,WACLD,SAUFyE,EAAa,WACf,MAAM,CACFxE,KAAK,WCNE,GAAEyE,MANN,uCAAG,WAAMlF,GAAN,eAAAN,EAAA,sEACUC,IAAMM,KAHd,aAG4BD,GAD9B,cACNH,EADM,yBAELA,EAAQC,MAFH,2CAAH,uDCwDIqF,EAlDD,WAAO,IAAD,EAEgBxE,mBAAS,IAFzB,mBAETyE,EAFS,KAECC,EAFD,OAGgB1E,mBAAS,IAHzB,mBAGT2E,EAHS,KAGCC,EAHD,KAIVC,EAAUjE,cACVD,EAAUC,cAEVkE,EAAU,uCAAG,WAAOhE,GAAP,iBAAA/B,EAAA,6DACf+B,EAAMC,iBADS,kBAGQgE,EAAaR,MAAM,CAAEE,WAAUE,aAHvC,cAGLK,EAHK,OAIXC,eAAeC,QAAQ,iBAAkBC,KAAKC,UAAUJ,IACxDK,EAAY3F,SAASsF,EAAKvG,OAC1BoG,EAAQR,EAASW,IACjBN,EAAY,IACZE,EAAY,IARD,UASMS,EAAYvG,SATlB,QASPK,EATO,OAUXwB,EAAQf,EAAUT,IAVP,kDAYX+B,QAAQC,IAAR,MAZW,0DAAH,sDAkBhB,OACI,yBAAKC,UAAU,cACX,kBAACC,EAAA,EAAKE,MAAN,CAAYO,GAAIiC,KACZ,kBAAC1C,EAAA,EAAKG,MAAN,CAAY4C,QAAM,EAACH,GAAG,KAAtB,aAGA,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC5C,EAAA,EAAKI,QAAN,CAAc3B,KAAK,OAAO4B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB+C,EAAY/C,EAAOC,QAAQC,YAAY,eAInG,kBAACR,EAAA,EAAKE,MAAN,CAAYO,GAAIiC,KACZ,kBAAC1C,EAAA,EAAKG,MAAN,CAAY4C,QAAM,EAACH,GAAG,KAAtB,aAGA,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC5C,EAAA,EAAKI,QAAN,CAAc3B,KAAK,WAAW4B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBiD,EAAYjD,EAAOC,QAAQC,YAAY,eAGvG,kBAACG,EAAA,EAAD,CAAQZ,UAAU,UAAUc,QAAS4C,GAArC,YCiBGQ,MAxDf,WAAgB,IAAD,EAEWtF,mBAAS,IAFpB,mBAENqC,EAFM,KAEAyB,EAFA,KAGPe,EAAUjE,cACVD,EAAUC,cACV2E,EAAUhD,aAAY,SAAAC,GAAK,OAAIA,EAAMqB,eACrCvB,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAG3C+C,qBAAU,WAAM,4CACd,gCAAAzG,EAAA,2DACQ0G,EAAiBR,eAAeS,QAAQ,mBADhD,uBAGUV,EAAOG,KAAKQ,MAAMF,GACxBZ,EAAQR,EAASW,IACjBK,EAAY3F,SAASsF,EAAKvG,OAL9B,SAMqB4G,EAAYvG,SANjC,OAMQK,EANR,OAOIwB,EAAQf,EAAUT,IAPtB,4CADc,uBAAC,WAAD,wBAWdyG,KACC,IAGH,IAMMC,EAAUN,EAAQO,KAAI,SAAC3G,GAAD,OAC1B,yBAAK4G,IAAK5G,EAAKK,GAAI4B,UAAU,oBAC3B,kBAAC,EAAD,CAAMiB,KAAMA,EAAMpC,MAAOd,EAAKc,MAAOE,SAAUhB,EAAKgB,SAAUE,KAAMlB,EAAKkB,KAAMb,GAAIL,EAAKK,GAAIe,KAAMpB,EAAKoB,KAAME,IAAKtB,EAAKsB,UAK3H,OAAgB,OAAZ6B,EAEA,6BACE,wBAAIlB,UAAU,YAAd,uBACA,kBAAC,EAAD,OAKF,6BACE,kBAACY,EAAA,EAAD,CAAQZ,UAAU,SAASc,QAvBlB,WACb2C,EAAQP,KACRW,eAAee,UAqBX,qBAA+D1D,EAAQmC,WACpD,IAAlBnC,EAAQc,OAAkB,kBAAC,EAAD,MAC3B,kBAAC,EAAD,CAAQQ,UAAWE,IAClB+B,I,ykBChET,IAcepD,EAdK,WAAyB,IAAxBD,EAAuB,uDAAf,KAAKyD,EAAU,uCACxC,OAAQA,EAAOnG,MACX,IAAK,WACD,IAAIoG,EAAO,KAAOD,EAAOpG,MACzB,OAAOqG,EACX,IAAK,UACD,OAAO1D,EACX,IAAK,SACD,OAAO,KACX,QACI,OAAOA,ICEJqB,EAZK,WAAuB,IAAtBrB,EAAqB,uDAAb,GAAGyD,EAAU,uCACtC,OAAQA,EAAOnG,MACX,IAAK,OACD,IAAIqG,EAAQ,YAAOF,EAAOpG,MAC1B,OAAOsG,EACX,IAAK,MAEL,QACI,OAAO3D,ICCJ4D,EALKC,YAAgB,CAChC5D,cACAoB,gBCMEyC,EAAUC,YAAYH,EACxBI,OAAOC,8BAAgCD,OAAOC,gCAIlDC,IAASC,OACT,kBAAC,IAAD,CAAUC,MAAON,GACb,kBAAC,EAAD,OAEEO,SAASC,eAAe,W","file":"static/js/main.5e23757e.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/infos'\r\n\r\nlet token = null\r\nvar config = {}\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst setConfig = () => {\r\n  config = {\r\n    headers: { Authorization: token },\r\n  }\r\n}\r\n\r\n\r\nconst getAll = async () => {\r\n  setConfig()\r\n  const request = await axios.get(baseUrl, config)\r\n  return request.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  setConfig()\r\n  const request = await axios.post(baseUrl, newObject, config)\r\n  return request.data\r\n}\r\n\r\n\r\nconst poista = async (id) => {\r\n  setConfig()\r\n  const request = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.data\r\n}\r\n\r\nexport default { getAll, create, poista, setToken }","export const saveInfos = (info) =>{\r\n    return{\r\n        type:\"SAVE\",\r\n        info\r\n    }\r\n}\r\n\r\nexport const getInfos = () =>{\r\n    return{\r\n        type:\"GET\"\r\n    }\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport \"../styles/newInfoStyle.css\"\r\nimport Connect from \"../api/InfoConnect\"\r\nimport {useSelector,useDispatch} from \"react-redux\"\r\nimport {getInfos,saveInfos} from \"../store/infos/infoAction\"\r\n\r\nconst NewInfo = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    const [link, setLink] = useState(\"\");\r\n    const [pic, setPic] = useState(true);\r\n    const infoSet = useDispatch()\r\n    \r\n    const postData = async (event) => {\r\n        event.preventDefault()\r\n        if (title !== \"\" && category !== \"\" && text !== \"\") {\r\n            let data = {\r\n                title,\r\n                category,\r\n                text,\r\n                link,\r\n                pic\r\n            }\r\n            const response = await Connect.create(data)\r\n            const newData = await Connect.getAll()\r\n            infoSet(saveInfos(newData))\r\n        } else {\r\n            console.log(\"Dont send empty data\")\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"shadowBackround\">\r\n            <Form onSubmit={postData}>\r\n                <Form.Group >\r\n                    <Form.Label>Title:</Form.Label>\r\n                    <Form.Control onChange={event => setTitle(event.target.value)} type=\"text\" placeholder=\"Enter the title of info\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                    <Form.Label>Category:</Form.Label>\r\n                    <Form.Control onChange={event => setCategory(event.target.value)} type=\"text\" placeholder=\"Enter the Category ex.Factory\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                    <Form.Label>Write the info conserning the title</Form.Label>\r\n                    <Form.Control onChange={event => setText(event.target.value)} as=\"textarea\" rows=\"7\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                    <Form.Label>add a link to a picture (Leave empty not to add link)</Form.Label>\r\n                    <Form.Control onChange={event => setLink(event.target.value)} type=\"text\" placeholder=\"Link here www.slush.org\" />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                Show as photo\r\n                <input type=\"radio\" onClick={() => setPic(false)} name=\"gender\" value=\"male\"></input>\r\n                add as a Link\r\n                <input type=\"radio\" onClick={() => setPic(true)} name=\"gender\" value=\"male\"></input>\r\n            </Form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NewInfo;","import React from \"react\"\r\nimport { Button } from 'react-bootstrap'\r\nimport Connect from \"../api/InfoConnect\"\r\nimport \"../styles/newInfoStyle.css\"\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { getInfos, saveInfos } from \"../store/infos/infoAction\"\r\n\r\n\r\nconst Info = ({ title, category, text, id, word, link, pic }) => {\r\n\r\n    const infoSet = useDispatch()\r\n    const userGet = useSelector(state => state.userReducer)\r\n\r\n    const deletee = async () => {\r\n        const del = await Connect.poista(id)\r\n        const newData = await Connect.getAll()\r\n        infoSet(saveInfos(newData))\r\n    }\r\n    let split = word.split(\" \")\r\n    console.log(split)\r\n\r\n\r\n    return (\r\n        <div >\r\n            <h1>{title}</h1>\r\n            <h3>{category}</h3>\r\n            <pre className=\"pre\">\r\n                <Highlighter\r\n                    highlightClassName=\"YourHighlightClass\"\r\n                    searchWords={split}\r\n                    autoEscape={true}\r\n                    textToHighlight={text} />\r\n            </pre>\r\n\r\n            {pic === false && <img src={link} alt=\"kuva\" />}\r\n            {pic === true && <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{link}</a>}\r\n            {userGet.admin === true && <Button variant=\"danger\" onClick={deletee}>Delete</Button>}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Info","\r\nconst sorting = (list,word) =>{\r\n        \r\n        return list.sort((a,b) => {\r\n                if(a.title.toLowerCase().includes(word.toLowerCase())){\r\n                        return -1;\r\n                }else if(b.title.toLowerCase().includes(word.toLowerCase())){\r\n                        return 1;\r\n                }else{\r\n\r\n                        if(a.text.toLowerCase().includes(word.toLowerCase())){\r\n                                return -1\r\n                        }else if(b.text.toLowerCase().includes(word.toLowerCase())){\r\n                                return 1;\r\n                        }else{\r\n                                return 0;\r\n                        }\r\n                        \r\n                        \r\n                }\r\n        } \r\n)}\r\n\r\nexport default sorting","import React, { useState, useEffect } from \"react\"\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport \"../styles/newInfoStyle.css\"\r\nimport sorting from \"../sortingAlgorythm/sorting\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { getInfos, saveInfos } from \"../store/infos/infoAction\"\r\n\r\nconst Search = ({setFilter}) => {\r\n    const infoSet = useDispatch()\r\n    const data = useSelector(state => state.infoReducer);\r\n    const [word, setWord] = useState(\"\")\r\n\r\n    const HandeChange = (event) => {\r\n        setWord(event.target.value)\r\n        setFilter(event.target.value)\r\n        let clone = [...data]\r\n        let newdata = sorting(clone, word)\r\n        infoSet(saveInfos(newdata))\r\n    }\r\n    return (\r\n        <div className=\"search\">\r\n            <Form.Group as={Row}>\r\n                <Col sm=\"11\">\r\n                    <Form.Control type=\"text\" onChange={HandeChange} placeholder=\"Search\" />\r\n                </Col>\r\n\r\n                <Form.Label column sm=\"1\">\r\n\r\n                </Form.Label>\r\n            </Form.Group>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","const saveUser = (info) =>{\r\n    return{\r\n        type:\"SAVEUSER\",\r\n        info\r\n    }\r\n}\r\n\r\nconst getUser = () =>{\r\n    return{\r\n        type:\"GETUSER\"\r\n    }\r\n}\r\n\r\nconst logOutUser = () =>{\r\n    return{\r\n        type:\"LOGOUT\"\r\n    }\r\n}\r\n\r\n\r\nexport {saveUser,getUser,logOutUser}","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async newObject => {\r\n  const request = await axios.post(baseUrl, newObject)\r\n  return request.data\r\n}\r\n\r\n\r\nexport default { login}","import React, { useState, useEffect } from \"react\"\r\nimport { Form, Button, Col, Row, Modal } from 'react-bootstrap'\r\nimport \"../styles/newInfoStyle.css\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { saveUser, getUser } from \"../store/user/userAction\"\r\nimport { getInfos, saveInfos } from \"../store/infos/infoAction\"\r\nimport InfoConnect from \"../api/InfoConnect\"\r\nimport LoginConnect from \"../api/loginConnect\"\r\n\r\nconst Login = () => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const userSet = useDispatch()\r\n    const infoSet = useDispatch()\r\n\r\n    const handeLogin = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            const user = await LoginConnect.login({ username, password })\r\n            sessionStorage.setItem('LoggedInfoUser', JSON.stringify(user))\r\n            InfoConnect.setToken(user.token)\r\n            userSet(saveUser(user))\r\n            setUsername('')\r\n            setPassword('')\r\n            let data = await InfoConnect.getAll()\r\n            infoSet(saveInfos(data))\r\n        } catch (exception) {\r\n            console.log(exception)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"loginTable\">\r\n            <Form.Group as={Row} >\r\n                <Form.Label column sm=\"4\">\r\n                    Username:\r\n                </Form.Label>\r\n                <Col sm=\"8\">\r\n                    <Form.Control type=\"text\" onChange={({ target }) => setUsername(target.value)} placeholder=\"username\" />\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} >\r\n                <Form.Label column sm=\"4\">\r\n                    Password:\r\n                </Form.Label>\r\n                <Col sm=\"8\">\r\n                    <Form.Control type=\"password\" onChange={({ target }) => setPassword(target.value)} placeholder=\"Password\" />\r\n                </Col>\r\n            </Form.Group>\r\n            <Button className=\"primary\" onClick={handeLogin}>Log in</Button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react';\r\nimport NewInfo from \"./components/newInfo\"\r\nimport { Button } from 'react-bootstrap'\r\nimport Info from \"./components/Info\"\r\nimport InfoConnect from \"./api/InfoConnect\"\r\nimport \"./styles/newInfoStyle.css\"\r\nimport \"./styles/button_styles.css\"\r\nimport Search from \"./components/search\"\r\nimport Login from \"./components/login\"\r\nimport LoginConnect from \"./api/loginConnect\"\r\nimport {useSelector,useDispatch} from \"react-redux\"\r\nimport {saveUser,getUser,logOutUser} from \"./store/user/userAction\"\r\nimport {getInfos,saveInfos} from \"./store/infos/infoAction\"\r\n\r\nfunction App() {\r\n\r\n  const [word, setWord] = useState(\"\")\r\n  const userSet = useDispatch()\r\n  const infoSet = useDispatch()\r\n  const infoGet = useSelector(state => state.infoReducer)\r\n  const userGet = useSelector(state => state.userReducer)\r\n\r\n\r\n  useEffect(() => {\r\n    async function start() {\r\n      const loggedUserJSON = sessionStorage.getItem('LoggedInfoUser')\r\n      if (loggedUserJSON) {\r\n        const user = JSON.parse(loggedUserJSON)\r\n        userSet(saveUser(user))\r\n        InfoConnect.setToken(user.token)\r\n        let data = await InfoConnect.getAll()\r\n        infoSet(saveInfos(data))\r\n      }\r\n    }\r\n    start()\r\n  }, [])\r\n\r\n\r\n  const logOut = () => {\r\n    userSet(logOutUser())\r\n    sessionStorage.clear()\r\n  }\r\n\r\n\r\n  const allData = infoGet.map((data) =>\r\n    <div key={data.id} className=\"shadowBackround2\" >\r\n      <Info word={word} title={data.title} category={data.category} text={data.text} id={data.id} link={data.link} pic={data.pic} />\r\n    </div>\r\n  )\r\n\r\n\r\n  if (userGet === null) {\r\n    return (\r\n      <div>\r\n        <h1 className=\"keskita2\">Welcome to Codester</h1>\r\n        <Login/>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Button className=\"logOut\" onClick={logOut}>Log out username: {userGet.username}</Button>\r\n        {userGet.admin === true && <NewInfo/>}\r\n        <Search setFilter={setWord}/>\r\n        {allData}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const userReducer = (state = null,action) =>{\r\n    switch (action.type) {\r\n        case \"SAVEUSER\":\r\n            let newUser = {...action.info}\r\n            return newUser\r\n        case \"GETUSER\":\r\n            return state\r\n        case \"LOGOUT\":\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","const infoReducer = (state = [],action) =>{\r\n    switch (action.type) {\r\n        case \"SAVE\":\r\n            let newState = [...action.info]\r\n            return newState\r\n        case \"GET\":\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default infoReducer","import userReducer from \"./user/userReducer\"\r\nimport infoReducer from './infos/infoReducer'\r\nimport { combineReducers } from \"redux\"\r\n\r\nconst allReducers = combineReducers({\r\n    userReducer,\r\n    infoReducer\r\n})\r\n\r\nexport default allReducers","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport App from './App';\r\n/*\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n*/\r\nimport {createStore} from \"redux\"\r\nimport allReducers from \"./store/combinedReducers\"\r\nimport {Provider} from 'react-redux'\r\n\r\nconst Mystore = createStore(allReducers,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={Mystore}>\r\n    <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}